version: '2'

services:

  nginx:
    image: nginx:1.17.8
    container_name: nginx_proxy_1
    ports:
     - "80:80"
     - "8080:8080"
     - "443:443"
    volumes:
     - /etc/nginx/conf.d
     - /etc/nginx/vhost.d
     - /usr/share/nginx/html
     - /home/ubuntu/nginx-proxy/nginx.conf:/etc/nginx/nginx.conf:ro
     - cert-store:/etc/nginx/certs:ro
    networks:
     nginx-proxy-net:
    restart: always

  gen:
    image: jwilder/docker-gen:0.7.3
    container_name: proxy_gen_1
    depends_on:
     - nginx
    volumes_from:
     - nginx
    volumes:
     - /var/run/docker.sock:/tmp/docker.sock:ro
     - /home/ubuntu/nginx-proxy/nginx.tmpl:/etc/docker-gen/templates/nginx.tmpl:ro
    command: [
        -notify-sighup,
        nginx_proxy_1,
        -watch,
        #-only-exposed,
        -wait,
        "5s:30s",
        /etc/docker-gen/templates/nginx.tmpl,
        /etc/nginx/conf.d/default.conf
      ]
    networks:
     nginx-proxy-net:
    restart: always

  letsencrypt:
    image: jrcs/letsencrypt-nginx-proxy-companion:v1.12
    container_name: letsencrypt_nginx_proxy_companion_1
    depends_on:
     - gen
    volumes_from:
     - nginx
    volumes:
     - cert-store:/etc/nginx/certs:rw
     - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
     - NGINX_DOCKER_GEN_CONTAINER=proxy_gen_1
    networks:
     nginx-proxy-net:
    restart: always

volumes:
  cert-store:

networks:
  nginx-proxy-net:
    external:
      name: proxy-tier
